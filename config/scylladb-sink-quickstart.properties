### Mandatory configs:
name=scylladb-sink-test
topics=<comma-separated-kafka-topics-name>
tasks.max=1
connector.class=io.connect.scylladb.ScyllaDbSinkConnector

scylladb.contact.points=<scylladb-hosts>
#Eg. scylladb.contact.points=10.0.24.69,10.0.24.70,10.0.24.71
# configure this to the public hostname of the Scylla nodes, the port will be taken from configuration scylladb.port

#scylladb.contact.points={\"private_host1:port1\",\"public_host1:port1\", \"private_host2:port2\",\"public_host2:port2\", ...}
#Eg. scylladb.contact.points={\"10.0.24.69:9042\": \"sl-eu-lon-2-portal.3.dblayer.com:15227\", \"10.0.24.71:9042\": \"sl-eu-lon-2-portal.2.dblayer.com:15229\", \"10.0.24.70:9042\": \"sl-eu-lon-2-portal.1.dblayer.com:15228\"}
# configure this to a JSON string having key-values pairs of internal private network address(es) mapped to external network address(es).

scylladb.keyspace=<keyspace-name>

### Connection based configs:
#scylladb.port=9042
#scylladb.loadbalancing.localdc=datacenter1
#scylladb.compression=NONE
#scylladb.security.enabled=false
#scylladb.username=cassandra
#scylladb.password=cassandra
#scylladb.ssl.enabled=false

### Keyspace related configs:
#scylladb.keyspace.create.enabled=true
#scylladb.keyspace.replication.factor=3

### SSL based configs:
#scylladb.ssl.provider=JDK
#scylladb.ssl.truststore.path=<truststore-path>
#scylladb.ssl.truststore.password=<truststore-password>
#scylladb.ssl.keystore.path=<keystore-path>
#scylladb.ssl.keystore.password=<keystore-password>
#scylladb.ssl.cipherSuites=<cipher-suites-to-enable>
#scylladb.ssl.openssl.keyCertChain=<ssl-certificate-path>
#ssl.openssl.privateKey=<privateKey-path>

### ScyllaDB related configs:
#behavior.on.error=FAIL

### Table related configs:
#scylladb.table.manage.enabled=true
#scylladb.table.create.compression.algorithm=NONE
#scylladb.offset.storage.table=kafka_connect_offsets

### Topic to table related configs:
#topic.my_topic.my_ks.my_table.mapping=column1=key.field1, column2=value.field1, __ttl=value.field2, __timestamp=value.field3, column3=header.field1
#topic.my_topic.my_ks.my_table.consistencyLevel=LOCAL_ONE
#topic.my_topic.my_ks.my_table.ttlSeconds=1
#topic.my_topic.my_ks.my_table.deletesEnabled=true

### Mapping topic names to arbitrary table names
# Format is topic2tablename.<name of kafka topic>: <name of Scylla table>
# topic2tablename.topic1-staging: completely_different_tablename
# topic2tablename.topic2-staging: completely_different_Tablename3

### Writer configs
#scylladb.consistency.level=LOCAL_QUORUM
#scylladb.deletes.enabled=true
#scylladb.execute.timeout.ms=30000
#scylladb.ttl=null
#scylladb.offset.storage.table.enable=true

### Converter configs(AVRO):
#key.converter=io.confluent.connect.avro.AvroConverter
#key.converter.schema.registry.url=http://localhost:8081
#value.converter=io.confluent.connect.avro.AvroConverter
#value.converter.schema.registry.url=http://localhost:8081
#key.converter.schemas.enable=true
#value.converter.schemas.enable=true

### Converter configs(JSON):
#key.converter=org.apache.kafka.connect.json.JsonConverter
#value.converter=org.apache.kafka.connect.json.JsonConverter
#key.converter.schemas.enable=true
#value.converter.schemas.enable=true
#transforms=createKey
#transforms.createKey.fields=<field-name-that-will-be-primary-key-in-scylla-table>
#transforms.createKey.type=org.apache.kafka.connect.transforms.ValueToKey

### SMTs:
#transforms=InsertSource,createKey
#transforms.InsertSource.type=org.apache.kafka.connect.transforms.InsertField$Value
#transforms.InsertSource.static.field=testing
#transforms.InsertSource.static.value=success